// Mocks generated by Mockito 5.1.0 from annotations
// in mc_crud_test/test/features/crud/data/repositories/user_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mc_crud_test/core/error_and_success/succeses.dart' as _i3;
import 'package:mc_crud_test/features/crud/data/data_sources/user_local_data_source.dart'
    as _i4;
import 'package:mc_crud_test/features/crud/domain/entities/user_entity.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserEntity_0 extends _i1.Fake implements _i2.UserEntity {}

class _FakeSuccess_1 extends _i1.Fake implements _i3.Success {}

/// A class which mocks [UserLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLocalDataSource extends _i1.Mock
    implements _i4.UserLocalDataSource {
  MockUserLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.UserEntity> createUser(_i2.UserEntity? user) =>
      (super.noSuchMethod(Invocation.method(#createUser, [user]),
              returnValue: Future<_i2.UserEntity>.value(_FakeUserEntity_0()))
          as _i5.Future<_i2.UserEntity>);
  @override
  _i5.Future<_i3.Success> deleteUser(_i2.UserEntity? user) =>
      (super.noSuchMethod(Invocation.method(#deleteUser, [user]),
              returnValue: Future<_i3.Success>.value(_FakeSuccess_1()))
          as _i5.Future<_i3.Success>);
  @override
  _i5.Future<_i2.UserEntity> editUser(_i2.UserEntity? user) =>
      (super.noSuchMethod(Invocation.method(#editUser, [user]),
              returnValue: Future<_i2.UserEntity>.value(_FakeUserEntity_0()))
          as _i5.Future<_i2.UserEntity>);
  @override
  _i5.Future<List<_i2.UserEntity>> getUsers() => (super.noSuchMethod(
          Invocation.method(#getUsers, []),
          returnValue: Future<List<_i2.UserEntity>>.value(<_i2.UserEntity>[]))
      as _i5.Future<List<_i2.UserEntity>>);
}
